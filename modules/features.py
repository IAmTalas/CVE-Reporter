import discord
from discord.ext import commands
from datetime import datetime
import requests
import hashlib
import json

bot = commands.Bot(command_prefix="! ",description="CVE Bot")

# take two args (JSON) and return a diff list : new - old 
def JsonDiff(newJson, oldJson):
    oldIds = set([cve['id'] for cve in oldJson])
    newIds = set([cve['id'] for cve in newJson])
    diff = newIds.difference(oldIds)
    return list(diff)

def checkCVE():
    embedItems = []
    #Read file if it's there else create it (old data) 
    try:
        with open('data.json', 'r') as file:
            content = json.load(file)
            oldHash = hashlib.md5(str(content).encode()).hexdigest()
            oldJsonData = content
    except FileNotFoundError:
        file = open('data.json', 'w')
        file.write('[]')
        oldJsonData = ""
        oldHash = -1

    # Get an update from API
    request = requests.get("https://cve.circl.lu/api/last")
    newHash = hashlib.md5(str(request.json()).encode()).hexdigest()
    newJsonData = json.loads(request.content.strip())

    # check if hash value of date.json file and new data from API
    diff = JsonDiff(newJsonData, oldJsonData)
    if oldHash != newHash and len(diff) != 0:
        # update date and time
        now = datetime.now()
        dt_string = now.strftime("%d/%m/%Y %H:%M:%S")
        print(f"[*] Update {dt_string}")
        for index, cve in enumerate(newJsonData, 1):
            embed = discord.Embed(title=f"{cve['id']}", description=f"Published : {cve['Published']}",color=discord.Color.random())
            embed.add_field(name="summary", value=f"{cve['summary'][:600]}")
            embed.add_field(name="CVSS", value=f"{cve['cvss']}")
            embedItems.append(embed)
            # await channel.send(embed=embed)
            if index == len(diff):
                break
        
        with open('data.json' , 'w') as file :    
            file.write(json.dumps(newJsonData))
    return embedItems
